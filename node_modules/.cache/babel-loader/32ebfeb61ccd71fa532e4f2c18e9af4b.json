{"ast":null,"code":"import _toConsumableArray from \"/Users/andrewng/Desktop/react-app/react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/andrewng/Desktop/react-app/react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/andrewng/Desktop/react-app/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/andrewng/Desktop/react-app/react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _createForOfIteratorHelper from \"/Users/andrewng/Desktop/react-app/react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport * as English from \"./english.js\";\nimport * as Formats from \"./formats.js\";\nimport { padStart } from \"./util.js\";\n\nfunction stringifyTokens(splits, tokenToString) {\n  var s = \"\";\n\n  var _iterator = _createForOfIteratorHelper(splits),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var token = _step.value;\n\n      if (token.literal) {\n        s += token.val;\n      } else {\n        s += tokenToString(token.val);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return s;\n}\n\nvar _macroTokenToFormatOpts = {\n  D: Formats.DATE_SHORT,\n  DD: Formats.DATE_MED,\n  DDD: Formats.DATE_FULL,\n  DDDD: Formats.DATE_HUGE,\n  t: Formats.TIME_SIMPLE,\n  tt: Formats.TIME_WITH_SECONDS,\n  ttt: Formats.TIME_WITH_SHORT_OFFSET,\n  tttt: Formats.TIME_WITH_LONG_OFFSET,\n  T: Formats.TIME_24_SIMPLE,\n  TT: Formats.TIME_24_WITH_SECONDS,\n  TTT: Formats.TIME_24_WITH_SHORT_OFFSET,\n  TTTT: Formats.TIME_24_WITH_LONG_OFFSET,\n  f: Formats.DATETIME_SHORT,\n  ff: Formats.DATETIME_MED,\n  fff: Formats.DATETIME_FULL,\n  ffff: Formats.DATETIME_HUGE,\n  F: Formats.DATETIME_SHORT_WITH_SECONDS,\n  FF: Formats.DATETIME_MED_WITH_SECONDS,\n  FFF: Formats.DATETIME_FULL_WITH_SECONDS,\n  FFFF: Formats.DATETIME_HUGE_WITH_SECONDS\n};\n/**\n * @private\n */\n\nvar Formatter = /*#__PURE__*/function () {\n  function Formatter(locale, formatOpts) {\n    _classCallCheck(this, Formatter);\n\n    this.opts = formatOpts;\n    this.loc = locale;\n    this.systemLoc = null;\n  }\n\n  _createClass(Formatter, [{\n    key: \"formatWithSystemDefault\",\n    value: function formatWithSystemDefault(dt, opts) {\n      if (this.systemLoc === null) {\n        this.systemLoc = this.loc.redefaultToSystem();\n      }\n\n      var df = this.systemLoc.dtFormatter(dt, _objectSpread(_objectSpread({}, this.opts), opts));\n      return df.format();\n    }\n  }, {\n    key: \"formatDateTime\",\n    value: function formatDateTime(dt) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var df = this.loc.dtFormatter(dt, _objectSpread(_objectSpread({}, this.opts), opts));\n      return df.format();\n    }\n  }, {\n    key: \"formatDateTimeParts\",\n    value: function formatDateTimeParts(dt) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var df = this.loc.dtFormatter(dt, _objectSpread(_objectSpread({}, this.opts), opts));\n      return df.formatToParts();\n    }\n  }, {\n    key: \"resolvedOptions\",\n    value: function resolvedOptions(dt) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var df = this.loc.dtFormatter(dt, _objectSpread(_objectSpread({}, this.opts), opts));\n      return df.resolvedOptions();\n    }\n  }, {\n    key: \"num\",\n    value: function num(n) {\n      var p = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      // we get some perf out of doing this here, annoyingly\n      if (this.opts.forceSimple) {\n        return padStart(n, p);\n      }\n\n      var opts = _objectSpread({}, this.opts);\n\n      if (p > 0) {\n        opts.padTo = p;\n      }\n\n      return this.loc.numberFormatter(opts).format(n);\n    }\n  }, {\n    key: \"formatDateTimeFromString\",\n    value: function formatDateTimeFromString(dt, fmt) {\n      var _this = this;\n\n      var knownEnglish = this.loc.listingMode() === \"en\",\n          useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== \"gregory\",\n          string = function string(opts, extract) {\n        return _this.loc.extract(dt, opts, extract);\n      },\n          formatOffset = function formatOffset(opts) {\n        if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {\n          return \"Z\";\n        }\n\n        return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : \"\";\n      },\n          meridiem = function meridiem() {\n        return knownEnglish ? English.meridiemForDateTime(dt) : string({\n          hour: \"numeric\",\n          hourCycle: \"h12\"\n        }, \"dayperiod\");\n      },\n          month = function month(length, standalone) {\n        return knownEnglish ? English.monthForDateTime(dt, length) : string(standalone ? {\n          month: length\n        } : {\n          month: length,\n          day: \"numeric\"\n        }, \"month\");\n      },\n          weekday = function weekday(length, standalone) {\n        return knownEnglish ? English.weekdayForDateTime(dt, length) : string(standalone ? {\n          weekday: length\n        } : {\n          weekday: length,\n          month: \"long\",\n          day: \"numeric\"\n        }, \"weekday\");\n      },\n          maybeMacro = function maybeMacro(token) {\n        var formatOpts = Formatter.macroTokenToFormatOpts(token);\n\n        if (formatOpts) {\n          return _this.formatWithSystemDefault(dt, formatOpts);\n        } else {\n          return token;\n        }\n      },\n          era = function era(length) {\n        return knownEnglish ? English.eraForDateTime(dt, length) : string({\n          era: length\n        }, \"era\");\n      },\n          tokenToString = function tokenToString(token) {\n        // Where possible: http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles\n        switch (token) {\n          // ms\n          case \"S\":\n            return _this.num(dt.millisecond);\n\n          case \"u\": // falls through\n\n          case \"SSS\":\n            return _this.num(dt.millisecond, 3);\n          // seconds\n\n          case \"s\":\n            return _this.num(dt.second);\n\n          case \"ss\":\n            return _this.num(dt.second, 2);\n          // fractional seconds\n\n          case \"uu\":\n            return _this.num(Math.floor(dt.millisecond / 10), 2);\n\n          case \"uuu\":\n            return _this.num(Math.floor(dt.millisecond / 100));\n          // minutes\n\n          case \"m\":\n            return _this.num(dt.minute);\n\n          case \"mm\":\n            return _this.num(dt.minute, 2);\n          // hours\n\n          case \"h\":\n            return _this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);\n\n          case \"hh\":\n            return _this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);\n\n          case \"H\":\n            return _this.num(dt.hour);\n\n          case \"HH\":\n            return _this.num(dt.hour, 2);\n          // offset\n\n          case \"Z\":\n            // like +6\n            return formatOffset({\n              format: \"narrow\",\n              allowZ: _this.opts.allowZ\n            });\n\n          case \"ZZ\":\n            // like +06:00\n            return formatOffset({\n              format: \"short\",\n              allowZ: _this.opts.allowZ\n            });\n\n          case \"ZZZ\":\n            // like +0600\n            return formatOffset({\n              format: \"techie\",\n              allowZ: _this.opts.allowZ\n            });\n\n          case \"ZZZZ\":\n            // like EST\n            return dt.zone.offsetName(dt.ts, {\n              format: \"short\",\n              locale: _this.loc.locale\n            });\n\n          case \"ZZZZZ\":\n            // like Eastern Standard Time\n            return dt.zone.offsetName(dt.ts, {\n              format: \"long\",\n              locale: _this.loc.locale\n            });\n          // zone\n\n          case \"z\":\n            // like America/New_York\n            return dt.zoneName;\n          // meridiems\n\n          case \"a\":\n            return meridiem();\n          // dates\n\n          case \"d\":\n            return useDateTimeFormatter ? string({\n              day: \"numeric\"\n            }, \"day\") : _this.num(dt.day);\n\n          case \"dd\":\n            return useDateTimeFormatter ? string({\n              day: \"2-digit\"\n            }, \"day\") : _this.num(dt.day, 2);\n          // weekdays - standalone\n\n          case \"c\":\n            // like 1\n            return _this.num(dt.weekday);\n\n          case \"ccc\":\n            // like 'Tues'\n            return weekday(\"short\", true);\n\n          case \"cccc\":\n            // like 'Tuesday'\n            return weekday(\"long\", true);\n\n          case \"ccccc\":\n            // like 'T'\n            return weekday(\"narrow\", true);\n          // weekdays - format\n\n          case \"E\":\n            // like 1\n            return _this.num(dt.weekday);\n\n          case \"EEE\":\n            // like 'Tues'\n            return weekday(\"short\", false);\n\n          case \"EEEE\":\n            // like 'Tuesday'\n            return weekday(\"long\", false);\n\n          case \"EEEEE\":\n            // like 'T'\n            return weekday(\"narrow\", false);\n          // months - standalone\n\n          case \"L\":\n            // like 1\n            return useDateTimeFormatter ? string({\n              month: \"numeric\",\n              day: \"numeric\"\n            }, \"month\") : _this.num(dt.month);\n\n          case \"LL\":\n            // like 01, doesn't seem to work\n            return useDateTimeFormatter ? string({\n              month: \"2-digit\",\n              day: \"numeric\"\n            }, \"month\") : _this.num(dt.month, 2);\n\n          case \"LLL\":\n            // like Jan\n            return month(\"short\", true);\n\n          case \"LLLL\":\n            // like January\n            return month(\"long\", true);\n\n          case \"LLLLL\":\n            // like J\n            return month(\"narrow\", true);\n          // months - format\n\n          case \"M\":\n            // like 1\n            return useDateTimeFormatter ? string({\n              month: \"numeric\"\n            }, \"month\") : _this.num(dt.month);\n\n          case \"MM\":\n            // like 01\n            return useDateTimeFormatter ? string({\n              month: \"2-digit\"\n            }, \"month\") : _this.num(dt.month, 2);\n\n          case \"MMM\":\n            // like Jan\n            return month(\"short\", false);\n\n          case \"MMMM\":\n            // like January\n            return month(\"long\", false);\n\n          case \"MMMMM\":\n            // like J\n            return month(\"narrow\", false);\n          // years\n\n          case \"y\":\n            // like 2014\n            return useDateTimeFormatter ? string({\n              year: \"numeric\"\n            }, \"year\") : _this.num(dt.year);\n\n          case \"yy\":\n            // like 14\n            return useDateTimeFormatter ? string({\n              year: \"2-digit\"\n            }, \"year\") : _this.num(dt.year.toString().slice(-2), 2);\n\n          case \"yyyy\":\n            // like 0012\n            return useDateTimeFormatter ? string({\n              year: \"numeric\"\n            }, \"year\") : _this.num(dt.year, 4);\n\n          case \"yyyyyy\":\n            // like 000012\n            return useDateTimeFormatter ? string({\n              year: \"numeric\"\n            }, \"year\") : _this.num(dt.year, 6);\n          // eras\n\n          case \"G\":\n            // like AD\n            return era(\"short\");\n\n          case \"GG\":\n            // like Anno Domini\n            return era(\"long\");\n\n          case \"GGGGG\":\n            return era(\"narrow\");\n\n          case \"kk\":\n            return _this.num(dt.weekYear.toString().slice(-2), 2);\n\n          case \"kkkk\":\n            return _this.num(dt.weekYear, 4);\n\n          case \"W\":\n            return _this.num(dt.weekNumber);\n\n          case \"WW\":\n            return _this.num(dt.weekNumber, 2);\n\n          case \"o\":\n            return _this.num(dt.ordinal);\n\n          case \"ooo\":\n            return _this.num(dt.ordinal, 3);\n\n          case \"q\":\n            // like 1\n            return _this.num(dt.quarter);\n\n          case \"qq\":\n            // like 01\n            return _this.num(dt.quarter, 2);\n\n          case \"X\":\n            return _this.num(Math.floor(dt.ts / 1000));\n\n          case \"x\":\n            return _this.num(dt.ts);\n\n          default:\n            return maybeMacro(token);\n        }\n      };\n\n      return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);\n    }\n  }, {\n    key: \"formatDurationFromString\",\n    value: function formatDurationFromString(dur, fmt) {\n      var _this2 = this;\n\n      var tokenToField = function tokenToField(token) {\n        switch (token[0]) {\n          case \"S\":\n            return \"millisecond\";\n\n          case \"s\":\n            return \"second\";\n\n          case \"m\":\n            return \"minute\";\n\n          case \"h\":\n            return \"hour\";\n\n          case \"d\":\n            return \"day\";\n\n          case \"w\":\n            return \"week\";\n\n          case \"M\":\n            return \"month\";\n\n          case \"y\":\n            return \"year\";\n\n          default:\n            return null;\n        }\n      },\n          tokenToString = function tokenToString(lildur) {\n        return function (token) {\n          var mapped = tokenToField(token);\n\n          if (mapped) {\n            return _this2.num(lildur.get(mapped), token.length);\n          } else {\n            return token;\n          }\n        };\n      },\n          tokens = Formatter.parseFormat(fmt),\n          realTokens = tokens.reduce(function (found, _ref) {\n        var literal = _ref.literal,\n            val = _ref.val;\n        return literal ? found : found.concat(val);\n      }, []),\n          collapsed = dur.shiftTo.apply(dur, _toConsumableArray(realTokens.map(tokenToField).filter(function (t) {\n        return t;\n      })));\n\n      return stringifyTokens(tokens, tokenToString(collapsed));\n    }\n  }], [{\n    key: \"create\",\n    value: function create(locale) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new Formatter(locale, opts);\n    }\n  }, {\n    key: \"parseFormat\",\n    value: function parseFormat(fmt) {\n      var current = null,\n          currentFull = \"\",\n          bracketed = false;\n      var splits = [];\n\n      for (var i = 0; i < fmt.length; i++) {\n        var c = fmt.charAt(i);\n\n        if (c === \"'\") {\n          if (currentFull.length > 0) {\n            splits.push({\n              literal: bracketed,\n              val: currentFull\n            });\n          }\n\n          current = null;\n          currentFull = \"\";\n          bracketed = !bracketed;\n        } else if (bracketed) {\n          currentFull += c;\n        } else if (c === current) {\n          currentFull += c;\n        } else {\n          if (currentFull.length > 0) {\n            splits.push({\n              literal: false,\n              val: currentFull\n            });\n          }\n\n          currentFull = c;\n          current = c;\n        }\n      }\n\n      if (currentFull.length > 0) {\n        splits.push({\n          literal: bracketed,\n          val: currentFull\n        });\n      }\n\n      return splits;\n    }\n  }, {\n    key: \"macroTokenToFormatOpts\",\n    value: function macroTokenToFormatOpts(token) {\n      return _macroTokenToFormatOpts[token];\n    }\n  }]);\n\n  return Formatter;\n}();\n\nexport { Formatter as default };","map":{"version":3,"names":["English","Formats","padStart","stringifyTokens","splits","tokenToString","s","token","literal","val","macroTokenToFormatOpts","D","DATE_SHORT","DD","DATE_MED","DDD","DATE_FULL","DDDD","DATE_HUGE","t","TIME_SIMPLE","tt","TIME_WITH_SECONDS","ttt","TIME_WITH_SHORT_OFFSET","tttt","TIME_WITH_LONG_OFFSET","T","TIME_24_SIMPLE","TT","TIME_24_WITH_SECONDS","TTT","TIME_24_WITH_SHORT_OFFSET","TTTT","TIME_24_WITH_LONG_OFFSET","f","DATETIME_SHORT","ff","DATETIME_MED","fff","DATETIME_FULL","ffff","DATETIME_HUGE","F","DATETIME_SHORT_WITH_SECONDS","FF","DATETIME_MED_WITH_SECONDS","FFF","DATETIME_FULL_WITH_SECONDS","FFFF","DATETIME_HUGE_WITH_SECONDS","Formatter","locale","formatOpts","opts","loc","systemLoc","dt","redefaultToSystem","df","dtFormatter","format","formatToParts","resolvedOptions","n","p","forceSimple","padTo","numberFormatter","fmt","knownEnglish","listingMode","useDateTimeFormatter","outputCalendar","string","extract","formatOffset","isOffsetFixed","offset","allowZ","isValid","zone","ts","meridiem","meridiemForDateTime","hour","hourCycle","month","length","standalone","monthForDateTime","day","weekday","weekdayForDateTime","maybeMacro","formatWithSystemDefault","era","eraForDateTime","num","millisecond","second","Math","floor","minute","offsetName","zoneName","year","toString","slice","weekYear","weekNumber","ordinal","quarter","parseFormat","dur","tokenToField","lildur","mapped","get","tokens","realTokens","reduce","found","concat","collapsed","shiftTo","map","filter","current","currentFull","bracketed","i","c","charAt","push"],"sources":["/Users/andrewng/Desktop/react-app/react-app/node_modules/luxon/src/impl/formatter.js"],"sourcesContent":["import * as English from \"./english.js\";\nimport * as Formats from \"./formats.js\";\nimport { padStart } from \"./util.js\";\n\nfunction stringifyTokens(splits, tokenToString) {\n  let s = \"\";\n  for (const token of splits) {\n    if (token.literal) {\n      s += token.val;\n    } else {\n      s += tokenToString(token.val);\n    }\n  }\n  return s;\n}\n\nconst macroTokenToFormatOpts = {\n  D: Formats.DATE_SHORT,\n  DD: Formats.DATE_MED,\n  DDD: Formats.DATE_FULL,\n  DDDD: Formats.DATE_HUGE,\n  t: Formats.TIME_SIMPLE,\n  tt: Formats.TIME_WITH_SECONDS,\n  ttt: Formats.TIME_WITH_SHORT_OFFSET,\n  tttt: Formats.TIME_WITH_LONG_OFFSET,\n  T: Formats.TIME_24_SIMPLE,\n  TT: Formats.TIME_24_WITH_SECONDS,\n  TTT: Formats.TIME_24_WITH_SHORT_OFFSET,\n  TTTT: Formats.TIME_24_WITH_LONG_OFFSET,\n  f: Formats.DATETIME_SHORT,\n  ff: Formats.DATETIME_MED,\n  fff: Formats.DATETIME_FULL,\n  ffff: Formats.DATETIME_HUGE,\n  F: Formats.DATETIME_SHORT_WITH_SECONDS,\n  FF: Formats.DATETIME_MED_WITH_SECONDS,\n  FFF: Formats.DATETIME_FULL_WITH_SECONDS,\n  FFFF: Formats.DATETIME_HUGE_WITH_SECONDS,\n};\n\n/**\n * @private\n */\n\nexport default class Formatter {\n  static create(locale, opts = {}) {\n    return new Formatter(locale, opts);\n  }\n\n  static parseFormat(fmt) {\n    let current = null,\n      currentFull = \"\",\n      bracketed = false;\n    const splits = [];\n    for (let i = 0; i < fmt.length; i++) {\n      const c = fmt.charAt(i);\n      if (c === \"'\") {\n        if (currentFull.length > 0) {\n          splits.push({ literal: bracketed, val: currentFull });\n        }\n        current = null;\n        currentFull = \"\";\n        bracketed = !bracketed;\n      } else if (bracketed) {\n        currentFull += c;\n      } else if (c === current) {\n        currentFull += c;\n      } else {\n        if (currentFull.length > 0) {\n          splits.push({ literal: false, val: currentFull });\n        }\n        currentFull = c;\n        current = c;\n      }\n    }\n\n    if (currentFull.length > 0) {\n      splits.push({ literal: bracketed, val: currentFull });\n    }\n\n    return splits;\n  }\n\n  static macroTokenToFormatOpts(token) {\n    return macroTokenToFormatOpts[token];\n  }\n\n  constructor(locale, formatOpts) {\n    this.opts = formatOpts;\n    this.loc = locale;\n    this.systemLoc = null;\n  }\n\n  formatWithSystemDefault(dt, opts) {\n    if (this.systemLoc === null) {\n      this.systemLoc = this.loc.redefaultToSystem();\n    }\n    const df = this.systemLoc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.format();\n  }\n\n  formatDateTime(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.format();\n  }\n\n  formatDateTimeParts(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.formatToParts();\n  }\n\n  resolvedOptions(dt, opts = {}) {\n    const df = this.loc.dtFormatter(dt, { ...this.opts, ...opts });\n    return df.resolvedOptions();\n  }\n\n  num(n, p = 0) {\n    // we get some perf out of doing this here, annoyingly\n    if (this.opts.forceSimple) {\n      return padStart(n, p);\n    }\n\n    const opts = { ...this.opts };\n\n    if (p > 0) {\n      opts.padTo = p;\n    }\n\n    return this.loc.numberFormatter(opts).format(n);\n  }\n\n  formatDateTimeFromString(dt, fmt) {\n    const knownEnglish = this.loc.listingMode() === \"en\",\n      useDateTimeFormatter = this.loc.outputCalendar && this.loc.outputCalendar !== \"gregory\",\n      string = (opts, extract) => this.loc.extract(dt, opts, extract),\n      formatOffset = (opts) => {\n        if (dt.isOffsetFixed && dt.offset === 0 && opts.allowZ) {\n          return \"Z\";\n        }\n\n        return dt.isValid ? dt.zone.formatOffset(dt.ts, opts.format) : \"\";\n      },\n      meridiem = () =>\n        knownEnglish\n          ? English.meridiemForDateTime(dt)\n          : string({ hour: \"numeric\", hourCycle: \"h12\" }, \"dayperiod\"),\n      month = (length, standalone) =>\n        knownEnglish\n          ? English.monthForDateTime(dt, length)\n          : string(standalone ? { month: length } : { month: length, day: \"numeric\" }, \"month\"),\n      weekday = (length, standalone) =>\n        knownEnglish\n          ? English.weekdayForDateTime(dt, length)\n          : string(\n              standalone ? { weekday: length } : { weekday: length, month: \"long\", day: \"numeric\" },\n              \"weekday\"\n            ),\n      maybeMacro = (token) => {\n        const formatOpts = Formatter.macroTokenToFormatOpts(token);\n        if (formatOpts) {\n          return this.formatWithSystemDefault(dt, formatOpts);\n        } else {\n          return token;\n        }\n      },\n      era = (length) =>\n        knownEnglish ? English.eraForDateTime(dt, length) : string({ era: length }, \"era\"),\n      tokenToString = (token) => {\n        // Where possible: http://cldr.unicode.org/translation/date-time-1/date-time#TOC-Standalone-vs.-Format-Styles\n        switch (token) {\n          // ms\n          case \"S\":\n            return this.num(dt.millisecond);\n          case \"u\":\n          // falls through\n          case \"SSS\":\n            return this.num(dt.millisecond, 3);\n          // seconds\n          case \"s\":\n            return this.num(dt.second);\n          case \"ss\":\n            return this.num(dt.second, 2);\n          // fractional seconds\n          case \"uu\":\n            return this.num(Math.floor(dt.millisecond / 10), 2);\n          case \"uuu\":\n            return this.num(Math.floor(dt.millisecond / 100));\n          // minutes\n          case \"m\":\n            return this.num(dt.minute);\n          case \"mm\":\n            return this.num(dt.minute, 2);\n          // hours\n          case \"h\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12);\n          case \"hh\":\n            return this.num(dt.hour % 12 === 0 ? 12 : dt.hour % 12, 2);\n          case \"H\":\n            return this.num(dt.hour);\n          case \"HH\":\n            return this.num(dt.hour, 2);\n          // offset\n          case \"Z\":\n            // like +6\n            return formatOffset({ format: \"narrow\", allowZ: this.opts.allowZ });\n          case \"ZZ\":\n            // like +06:00\n            return formatOffset({ format: \"short\", allowZ: this.opts.allowZ });\n          case \"ZZZ\":\n            // like +0600\n            return formatOffset({ format: \"techie\", allowZ: this.opts.allowZ });\n          case \"ZZZZ\":\n            // like EST\n            return dt.zone.offsetName(dt.ts, { format: \"short\", locale: this.loc.locale });\n          case \"ZZZZZ\":\n            // like Eastern Standard Time\n            return dt.zone.offsetName(dt.ts, { format: \"long\", locale: this.loc.locale });\n          // zone\n          case \"z\":\n            // like America/New_York\n            return dt.zoneName;\n          // meridiems\n          case \"a\":\n            return meridiem();\n          // dates\n          case \"d\":\n            return useDateTimeFormatter ? string({ day: \"numeric\" }, \"day\") : this.num(dt.day);\n          case \"dd\":\n            return useDateTimeFormatter ? string({ day: \"2-digit\" }, \"day\") : this.num(dt.day, 2);\n          // weekdays - standalone\n          case \"c\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"ccc\":\n            // like 'Tues'\n            return weekday(\"short\", true);\n          case \"cccc\":\n            // like 'Tuesday'\n            return weekday(\"long\", true);\n          case \"ccccc\":\n            // like 'T'\n            return weekday(\"narrow\", true);\n          // weekdays - format\n          case \"E\":\n            // like 1\n            return this.num(dt.weekday);\n          case \"EEE\":\n            // like 'Tues'\n            return weekday(\"short\", false);\n          case \"EEEE\":\n            // like 'Tuesday'\n            return weekday(\"long\", false);\n          case \"EEEEE\":\n            // like 'T'\n            return weekday(\"narrow\", false);\n          // months - standalone\n          case \"L\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"LL\":\n            // like 01, doesn't seem to work\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\", day: \"numeric\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"LLL\":\n            // like Jan\n            return month(\"short\", true);\n          case \"LLLL\":\n            // like January\n            return month(\"long\", true);\n          case \"LLLLL\":\n            // like J\n            return month(\"narrow\", true);\n          // months - format\n          case \"M\":\n            // like 1\n            return useDateTimeFormatter\n              ? string({ month: \"numeric\" }, \"month\")\n              : this.num(dt.month);\n          case \"MM\":\n            // like 01\n            return useDateTimeFormatter\n              ? string({ month: \"2-digit\" }, \"month\")\n              : this.num(dt.month, 2);\n          case \"MMM\":\n            // like Jan\n            return month(\"short\", false);\n          case \"MMMM\":\n            // like January\n            return month(\"long\", false);\n          case \"MMMMM\":\n            // like J\n            return month(\"narrow\", false);\n          // years\n          case \"y\":\n            // like 2014\n            return useDateTimeFormatter ? string({ year: \"numeric\" }, \"year\") : this.num(dt.year);\n          case \"yy\":\n            // like 14\n            return useDateTimeFormatter\n              ? string({ year: \"2-digit\" }, \"year\")\n              : this.num(dt.year.toString().slice(-2), 2);\n          case \"yyyy\":\n            // like 0012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 4);\n          case \"yyyyyy\":\n            // like 000012\n            return useDateTimeFormatter\n              ? string({ year: \"numeric\" }, \"year\")\n              : this.num(dt.year, 6);\n          // eras\n          case \"G\":\n            // like AD\n            return era(\"short\");\n          case \"GG\":\n            // like Anno Domini\n            return era(\"long\");\n          case \"GGGGG\":\n            return era(\"narrow\");\n          case \"kk\":\n            return this.num(dt.weekYear.toString().slice(-2), 2);\n          case \"kkkk\":\n            return this.num(dt.weekYear, 4);\n          case \"W\":\n            return this.num(dt.weekNumber);\n          case \"WW\":\n            return this.num(dt.weekNumber, 2);\n          case \"o\":\n            return this.num(dt.ordinal);\n          case \"ooo\":\n            return this.num(dt.ordinal, 3);\n          case \"q\":\n            // like 1\n            return this.num(dt.quarter);\n          case \"qq\":\n            // like 01\n            return this.num(dt.quarter, 2);\n          case \"X\":\n            return this.num(Math.floor(dt.ts / 1000));\n          case \"x\":\n            return this.num(dt.ts);\n          default:\n            return maybeMacro(token);\n        }\n      };\n\n    return stringifyTokens(Formatter.parseFormat(fmt), tokenToString);\n  }\n\n  formatDurationFromString(dur, fmt) {\n    const tokenToField = (token) => {\n        switch (token[0]) {\n          case \"S\":\n            return \"millisecond\";\n          case \"s\":\n            return \"second\";\n          case \"m\":\n            return \"minute\";\n          case \"h\":\n            return \"hour\";\n          case \"d\":\n            return \"day\";\n          case \"w\":\n            return \"week\";\n          case \"M\":\n            return \"month\";\n          case \"y\":\n            return \"year\";\n          default:\n            return null;\n        }\n      },\n      tokenToString = (lildur) => (token) => {\n        const mapped = tokenToField(token);\n        if (mapped) {\n          return this.num(lildur.get(mapped), token.length);\n        } else {\n          return token;\n        }\n      },\n      tokens = Formatter.parseFormat(fmt),\n      realTokens = tokens.reduce(\n        (found, { literal, val }) => (literal ? found : found.concat(val)),\n        []\n      ),\n      collapsed = dur.shiftTo(...realTokens.map(tokenToField).filter((t) => t));\n    return stringifyTokens(tokens, tokenToString(collapsed));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}