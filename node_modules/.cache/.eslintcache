[{"/Users/andrewng/Desktop/react-app/react-app/src/index.js":"1","/Users/andrewng/Desktop/react-app/react-app/src/App.js":"2","/Users/andrewng/Desktop/react-app/react-app/src/components/TopButtons.jsx":"3","/Users/andrewng/Desktop/react-app/react-app/src/components/Inputs.jsx":"4","/Users/andrewng/Desktop/react-app/react-app/src/components/TimeAndLocation.jsx":"5","/Users/andrewng/Desktop/react-app/react-app/src/components/TemperatureAndDetails.jsx":"6","/Users/andrewng/Desktop/react-app/react-app/src/components/Forecast.jsx":"7","/Users/andrewng/Desktop/react-app/react-app/src/Services/weatherService.js":"8"},{"size":220,"mtime":1659125031462,"results":"9","hashOfConfig":"10"},{"size":2203,"mtime":1659387956161,"results":"11","hashOfConfig":"10"},{"size":624,"mtime":1659387935303,"results":"12","hashOfConfig":"10"},{"size":2364,"mtime":1659388540852,"results":"13","hashOfConfig":"10"},{"size":653,"mtime":1659387954154,"results":"14","hashOfConfig":"10"},{"size":2914,"mtime":1659385880156,"results":"15","hashOfConfig":"10"},{"size":902,"mtime":1659385295112,"results":"16","hashOfConfig":"10"},{"size":2206,"mtime":1659385262493,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"c3190l",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/andrewng/Desktop/react-app/react-app/src/index.js",[],[],[],"/Users/andrewng/Desktop/react-app/react-app/src/App.js",["46","47"],[],"\n\nimport './App.css';\nimport UilReact from \"@iconscout/react-unicons/icons/uil-react\"\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getWeatherData from './Services/weatherService';\nimport getFormattedWeatherData from './Services/weatherService';\nimport { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n\n  const [query, setQuery] = useState({q: 'berlin'})\n  const [units, setUnits] = useState('metric')\n  const [weather, setWeather] = useState(null)\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const message = query.q ? query.q: 'current location.'\n\n      toast.info('Fetching weather for ' + message)\n      await getFormattedWeatherData({...query, units}).then(\n        (data) => {\n\n          toast.success(`Succesfully fetch weather for ${data.name}, ${data.country}`)\n          setWeather(data);\n        })\n      \n  \n    }\n\n    fetchWeather()\n\n  }, [query,units])\n\n  const formatBackground = () => {\n    if(!weather) return 'from-cyan-700 to-blue-700'\n    const threshold = units === 'metric' ? 20 : 60\n    if (weather.temp <= threshold) return 'from-cyan-700 to blue-700'\n\n    return 'from-yellow-700 to-orange-700'\n  }\n  return (\n    <div className={`mx-auto max-w-screen-md mt-4 py-5 px32 bg-gradient-to-br from-cyan-700 to-blue-700 h-fit shadow-xl\n    shadow-gray-400 ${formatBackground()}`}>\n      <TopButtons setQuery={setQuery}/>\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n\n        <div>\n          <TimeAndLocation weather={weather}/> \n          <TemperatureAndDetails weather={weather} />\n    \n          <Forecast title='hourly forecast' items={weather.hourly} />\n          <Forecast title='daily forecast'items={weather.daily}/> \n\n        </div>\n\n      )}\n\n    <ToastContainer autoClose={5000} theme='colored' newestOnTop={true} />\n      \n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/andrewng/Desktop/react-app/react-app/src/components/TopButtons.jsx",[],[],"/Users/andrewng/Desktop/react-app/react-app/src/components/Inputs.jsx",["48"],[],"import React, {useState} from 'react'\nimport {UilSearch, UilLocationPoint} from '@iconscout/react-unicons'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction Inputs({setQuery, units, setUnits}) {\n  const [city, setCity] = useState('')\n  const handleSearchClick = () => {\n    if (city !== \"\") setQuery({q:city})\n  }\n\n  const handleUnitsChange = (e) => {\n    const selectedUnit = e.currentTarget.name\n    if (units !== selectedUnit) setUnits(selectedUnit)\n  }\n\n  const handleLocationClick = () => {\n    if (navigator.geolocation) {\n      toast.info('Fetching users location.')\n      navigator.geolocation.getCurrentPosition((position) => {\n        let lat = position.coords.latitude\n        let lon = position.coords.longitude\n        toast.success(\"Location fetched.\")\n\n        setQuery({\n          lat,\n          lon,\n        })\n      })\n    }\n\n  }\n  return (\n    <div classname ='flex flex-row justify-center my-6'>\n        <div className ='flex flew-row w-3/4 items-center justify-center space-x-4'>\n            <input \n            value={city}\n            onChange={(e) => setCity(e.currentTarget.value)}\n            type=\"text\" \n            placeholder='Search....'\n            className=\"text-xl font-light p-2 focus:outline-none capitalize\" />\n            <UilSearch\n             size={25} \n             className=\"text-white cursor-pointer transition ease-out hover:scale-125\" \n             onClick ={handleSearchClick}/>\n             \n            <UilLocationPoint \n             size={25} \n             className=\"text-white cursor-pointer transition ease-out hover:scale-125\" \n             onClick ={handleLocationClick}/>\n            \n        </div>\n        <div\n            className=\"flex flex-row w-2/4 items-center justify-center\">\n            <button \n             name=\"metric\" \n             className='text-xl text-white cursor-pointer transition ease-out hover:scale-125'\n             onClick={handleUnitsChange}>째C |</button>\n            <p\n             className=\"text-xl text-white mx-1 \">\n\n            </p>\n            <button \n             name=\"imperial\" \n             className='text-xl text-white cursor-pointer transition ease-out hover:scale-125' \n             onClick={handleUnitsChange}> 째F</button>\n            \n        </div>\n    </div>\n  )\n} \n\nexport default Inputs","/Users/andrewng/Desktop/react-app/react-app/src/components/TimeAndLocation.jsx",[],[],"/Users/andrewng/Desktop/react-app/react-app/src/components/TemperatureAndDetails.jsx",["49","50"],[],"import React from 'react'\nimport { formatToLocalTime } from '../Services/weatherService';\nimport {\n    UilArrowUp,\n    UilArrowDown,\n    UilTemperature,\n    UilTear,\n    UilWind,\n    UilSun,\n    UilSunset,\n} from \"@iconscout/react-unicons\";\nimport { iconUrlFromCode } from '../Services/weatherService';\nfunction TemperatureAndDetails({weather: {\n    details, icon, temp, temp_min, temp_max, sunrise, sunset, \n    speed, humidity, feels_like, timezone\n}}) {\n  return (\n    <div>\n        <div className='flex items-center justify-center py-6 \n        text-xl text-cyan-300'>\n            <p>\n                {details}\n            </p>\n\n        </div>\n        <div className='flex flex-row itmes-center justify-between\n        text-white py-3'>\n                <img src= {iconUrlFromCode(icon)} \n                alt=\"\"\n                className='w-20' />\n\n                <p className='text-5xl'> {`${temp.toFixed()}째`}</p>\n                <div className='flex flex-col space-y-2'>\n                    <div className='flex font-light text-sm\n                    items-center justify-center'>\n                        <UilTemperature size={18} className=\"mr-1\"/>\n                        Real Feel:\n                        <span className='font-medium ml-1'>{`${feels_like.toFixed()}째`}</span>\n                    </div>\n\n                    <div className='flex font-light text-sm\n                    items-center justify-center'>\n                        <UilWind size={18} className=\"mr-1\"/>\n                        Wind: {}\n                        <span className='font-medium ml-1'>{`${speed.toFixed()}`}km/h</span>\n                    </div>\n\n                    <div className='flex font-light text-sm\n                    items-center justify-center'>\n                        <UilTear size={18} className=\"mr-1\"/>\n                        Humidity:\n                        <span className='font-medium ml-1'> {`${humidity.toFixed()}`}%</span>\n                    </div>\n                </div>\n        </div>\n\n    <div className='flex flex-row items-center justify-center\n    space-x-2 text-white text-sm py-3'>\n\n        <UilSun />\n        <p className='font-light'> Rise: <span className='font-medium ml-1'>{formatToLocalTime(sunrise, timezone, 'hh:mm a')}</span></p>\n        <p className='font-light'></p>\n        <UilSunset />\n        <p className='font-light'> Set: <span className='font-medium ml-1'>{formatToLocalTime(sunset, timezone, 'hh:mm a')}</span></p>\n        <p className='font-light'></p>\n        <UilSun/>\n        <p className='font-light'> High: <span className='font-medium ml-1'>{`${temp_max.toFixed()}`}째</span></p>\n        <p className='font-light'></p>\n        <UilSun />\n        <p className='font-light'> Low: <span className='font-medium ml-1'>{`${temp_min.toFixed()}`}째</span></p>\n        <p className='font-light'></p>\n    </div>\n\n    </div>\n  )\n} \n\nexport default TemperatureAndDetails","/Users/andrewng/Desktop/react-app/react-app/src/components/Forecast.jsx",[],[],"/Users/andrewng/Desktop/react-app/react-app/src/Services/weatherService.js",[],[],{"ruleId":"51","severity":1,"message":"52","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":16},{"ruleId":"51","severity":1,"message":"55","line":10,"column":8,"nodeType":"53","messageId":"54","endLine":10,"endColumn":22},{"ruleId":"51","severity":1,"message":"56","line":3,"column":10,"nodeType":"53","messageId":"54","endLine":3,"endColumn":24},{"ruleId":"51","severity":1,"message":"57","line":4,"column":5,"nodeType":"53","messageId":"54","endLine":4,"endColumn":15},{"ruleId":"51","severity":1,"message":"58","line":5,"column":5,"nodeType":"53","messageId":"54","endLine":5,"endColumn":17},"no-unused-vars","'UilReact' is defined but never used.","Identifier","unusedVar","'getWeatherData' is defined but never used.","'ToastContainer' is defined but never used.","'UilArrowUp' is defined but never used.","'UilArrowDown' is defined but never used."]