{"ast":null,"code":"var _jsxFileName = \"/Users/andrewng/Desktop/react-app/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport UilReact from \"@iconscout/react-unicons/icons/uil-react\";\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getWeatherData from './Services/weatherService';\nimport getFormattedWeatherData from './Services/weatherService';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: 'berlin'\n  });\n  const [units, setUnits] = useState('metric');\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({ ...query,\n        units\n      }).then(data => {\n        setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query, units]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto max-w-screen-md mt-4 py-5 px32 bg-gradient-to-br from-cyan-700 to-blue-700 h-fit shadow-xl shadow-gray-400\",\n    children: [/*#__PURE__*/_jsxDEV(TopButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeAndLocation, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureAndDetails, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"hourly forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"weekly forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+U8zrbIgeUj+w12tGrZUYA8UiT4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UilReact","TopButtons","Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getWeatherData","getFormattedWeatherData","useEffect","useState","App","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","then","data"],"sources":["/Users/andrewng/Desktop/react-app/react-app/src/App.js"],"sourcesContent":["\n\nimport './App.css';\nimport UilReact from \"@iconscout/react-unicons/icons/uil-react\"\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getWeatherData from './Services/weatherService';\nimport getFormattedWeatherData from './Services/weatherService';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [query, setQuery] = useState({q: 'berlin'})\n  const [units, setUnits] = useState('metric')\n  const [weather, setWeather] = useState(null)\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      await getFormattedWeatherData({...query, units}).then(\n        (data) => {\n          setWeather(data);\n        })\n      \n  \n    }\n\n    fetchWeather()\n\n  }, [query,units])\n  return (\n    <div className='mx-auto max-w-screen-md mt-4 py-5 px32 bg-gradient-to-br from-cyan-700 to-blue-700 h-fit shadow-xl\n    shadow-gray-400'>\n      <TopButtons />\n      <Inputs />\n\n      {weather && (\n\n        <div>\n          <TimeAndLocation weather={weather}/> \n          <TemperatureAndDetails weather={weather} />\n    \n          <Forecast title='hourly forecast' />\n          <Forecast title='weekly forecast' /> \n\n        </div>\n\n      )}\n      \n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAEA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,0CAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;IAACI,CAAC,EAAE;EAAJ,CAAD,CAAlC;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,QAAD,CAAlC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,YAAY;MAC/B,MAAMX,uBAAuB,CAAC,EAAC,GAAGI,KAAJ;QAAWG;MAAX,CAAD,CAAvB,CAA2CK,IAA3C,CACHC,IAAD,IAAU;QACRH,UAAU,CAACG,IAAD,CAAV;MACD,CAHG,CAAN;IAMD,CAPD;;IASAF,YAAY;EAEb,CAZQ,EAYN,CAACP,KAAD,EAAOG,KAAP,CAZM,CAAT;EAaA,oBACE;IAAK,SAAS,EAAC,oHAAf;IAAA,wBAEE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAHF,EAKGE,OAAO,iBAEN;MAAA,wBACE,QAAC,eAAD;QAAiB,OAAO,EAAEA;MAA1B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,qBAAD;QAAuB,OAAO,EAAEA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAFF,eAIE,QAAC,QAAD;QAAU,KAAK,EAAC;MAAhB;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,QAAD;QAAU,KAAK,EAAC;MAAhB;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GAzCQN,G;;KAAAA,G;AA2CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}