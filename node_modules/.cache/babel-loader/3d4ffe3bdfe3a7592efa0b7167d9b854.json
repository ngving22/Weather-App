{"ast":null,"code":"import _classCallCheck from \"/Users/andrewng/Desktop/react-app/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/andrewng/Desktop/react-app/react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/andrewng/Desktop/react-app/react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/andrewng/Desktop/react-app/react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { formatOffset as _formatOffset, parseZoneInfo } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\nvar singleton = null;\n/**\n * Represents the local zone for this JavaScript environment.\n * @implements {Zone}\n */\n\nvar SystemZone = /*#__PURE__*/function (_Zone) {\n  _inherits(SystemZone, _Zone);\n\n  var _super = _createSuper(SystemZone);\n\n  function SystemZone() {\n    _classCallCheck(this, SystemZone);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SystemZone, [{\n    key: \"type\",\n    get:\n    /** @override **/\n    function get() {\n      return \"system\";\n    }\n    /** @override **/\n\n  }, {\n    key: \"name\",\n    get: function get() {\n      return new Intl.DateTimeFormat().resolvedOptions().timeZone;\n    }\n    /** @override **/\n\n  }, {\n    key: \"isUniversal\",\n    get: function get() {\n      return false;\n    }\n    /** @override **/\n\n  }, {\n    key: \"offsetName\",\n    value: function offsetName(ts, _ref) {\n      var format = _ref.format,\n          locale = _ref.locale;\n      return parseZoneInfo(ts, format, locale);\n    }\n    /** @override **/\n\n  }, {\n    key: \"formatOffset\",\n    value: function formatOffset(ts, format) {\n      return _formatOffset(this.offset(ts), format);\n    }\n    /** @override **/\n\n  }, {\n    key: \"offset\",\n    value: function offset(ts) {\n      return -new Date(ts).getTimezoneOffset();\n    }\n    /** @override **/\n\n  }, {\n    key: \"equals\",\n    value: function equals(otherZone) {\n      return otherZone.type === \"system\";\n    }\n    /** @override **/\n\n  }, {\n    key: \"isValid\",\n    get: function get() {\n      return true;\n    }\n  }], [{\n    key: \"instance\",\n    get:\n    /**\n     * Get a singleton instance of the local zone\n     * @return {SystemZone}\n     */\n    function get() {\n      if (singleton === null) {\n        singleton = new SystemZone();\n      }\n\n      return singleton;\n    }\n  }]);\n\n  return SystemZone;\n}(Zone);\n\nexport { SystemZone as default };","map":{"version":3,"names":["formatOffset","parseZoneInfo","Zone","singleton","SystemZone","Intl","DateTimeFormat","resolvedOptions","timeZone","ts","format","locale","offset","Date","getTimezoneOffset","otherZone","type"],"sources":["/Users/andrewng/Desktop/react-app/react-app/node_modules/luxon/src/zones/systemZone.js"],"sourcesContent":["import { formatOffset, parseZoneInfo } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * Represents the local zone for this JavaScript environment.\n * @implements {Zone}\n */\nexport default class SystemZone extends Zone {\n  /**\n   * Get a singleton instance of the local zone\n   * @return {SystemZone}\n   */\n  static get instance() {\n    if (singleton === null) {\n      singleton = new SystemZone();\n    }\n    return singleton;\n  }\n\n  /** @override **/\n  get type() {\n    return \"system\";\n  }\n\n  /** @override **/\n  get name() {\n    return new Intl.DateTimeFormat().resolvedOptions().timeZone;\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return false;\n  }\n\n  /** @override **/\n  offsetName(ts, { format, locale }) {\n    return parseZoneInfo(ts, format, locale);\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.offset(ts), format);\n  }\n\n  /** @override **/\n  offset(ts) {\n    return -new Date(ts).getTimezoneOffset();\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"system\";\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,YAAY,IAAZA,aAAT,EAAuBC,aAAvB,QAA4C,iBAA5C;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,IAAIC,SAAS,GAAG,IAAhB;AAEA;AACA;AACA;AACA;;IACqBC,U;;;;;;;;;;;;;;IAYnB;IACA,eAAW;MACT,OAAO,QAAP;IACD;IAED;;;;SACA,eAAW;MACT,OAAO,IAAIC,IAAI,CAACC,cAAT,GAA0BC,eAA1B,GAA4CC,QAAnD;IACD;IAED;;;;SACA,eAAkB;MAChB,OAAO,KAAP;IACD;IAED;;;;WACA,oBAAWC,EAAX,QAAmC;MAAA,IAAlBC,MAAkB,QAAlBA,MAAkB;MAAA,IAAVC,MAAU,QAAVA,MAAU;MACjC,OAAOV,aAAa,CAACQ,EAAD,EAAKC,MAAL,EAAaC,MAAb,CAApB;IACD;IAED;;;;WACA,sBAAaF,EAAb,EAAiBC,MAAjB,EAAyB;MACvB,OAAOV,aAAY,CAAC,KAAKY,MAAL,CAAYH,EAAZ,CAAD,EAAkBC,MAAlB,CAAnB;IACD;IAED;;;;WACA,gBAAOD,EAAP,EAAW;MACT,OAAO,CAAC,IAAII,IAAJ,CAASJ,EAAT,EAAaK,iBAAb,EAAR;IACD;IAED;;;;WACA,gBAAOC,SAAP,EAAkB;MAChB,OAAOA,SAAS,CAACC,IAAV,KAAmB,QAA1B;IACD;IAED;;;;SACA,eAAc;MACZ,OAAO,IAAP;IACD;;;;IAjDD;AACF;AACA;AACA;IACE,eAAsB;MACpB,IAAIb,SAAS,KAAK,IAAlB,EAAwB;QACtBA,SAAS,GAAG,IAAIC,UAAJ,EAAZ;MACD;;MACD,OAAOD,SAAP;IACD;;;;EAVqCD,I;;SAAnBE,U"},"metadata":{},"sourceType":"module"}