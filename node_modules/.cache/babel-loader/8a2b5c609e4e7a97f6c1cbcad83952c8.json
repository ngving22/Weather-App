{"ast":null,"code":"var _jsxFileName = \"/Users/andrewng/Desktop/react-app/react-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport UilReact from \"@iconscout/react-unicons/icons/uil-react\";\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getWeatherData from './Services/weatherService';\nimport getFormattedWeatherData from './Services/weatherService';\nimport { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: 'berlin'\n  });\n  const [units, setUnits] = useState('metric');\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const message = query.q ? query.q : 'current location.';\n      toast.info('Fetching weather for ' + message);\n      await getFormattedWeatherData({ ...query,\n        units\n      }).then(data => {\n        toast.success(`Succesfully fetch weather for ${data.name}, ${data.country}`);\n        setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query, units]);\n\n  const formatBackground = () => {\n    if (!weather) return 'from-cyan-700 to-blue-700';\n    const threshold = units === 'metric' ? 20 : 60;\n    if (weather.temp <= threshold) return 'from-cyan-700 to blue-700';\n    return 'from-yellow-700 to-orange-700';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `mx-auto max-w-screen-md mt-4 py-5 px32 bg-gradient-to-br from-cyan-700 to-blue-700 h-fit shadow-xl\n    shadow-gray-400 ${formatBackground()}`,\n    children: [/*#__PURE__*/_jsxDEV(TopButtons, {\n      setQuery: setQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      setQuery: setQuery,\n      units: units,\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeAndLocation, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureAndDetails, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"hourly forecast\",\n        items: weather.hourly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"daily forecast\",\n        items: weather.daily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 5000,\n      theme: \"colored\",\n      newestOnTop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+U8zrbIgeUj+w12tGrZUYA8UiT4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UilReact","TopButtons","Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getWeatherData","getFormattedWeatherData","useEffect","useState","ToastContainer","toast","App","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","message","info","then","data","success","name","country","formatBackground","threshold","temp","hourly","daily"],"sources":["/Users/andrewng/Desktop/react-app/react-app/src/App.js"],"sourcesContent":["\n\nimport './App.css';\nimport UilReact from \"@iconscout/react-unicons/icons/uil-react\"\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getWeatherData from './Services/weatherService';\nimport getFormattedWeatherData from './Services/weatherService';\nimport { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n\n  const [query, setQuery] = useState({q: 'berlin'})\n  const [units, setUnits] = useState('metric')\n  const [weather, setWeather] = useState(null)\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const message = query.q ? query.q: 'current location.'\n\n      toast.info('Fetching weather for ' + message)\n      await getFormattedWeatherData({...query, units}).then(\n        (data) => {\n\n          toast.success(`Succesfully fetch weather for ${data.name}, ${data.country}`)\n          setWeather(data);\n        })\n      \n  \n    }\n\n    fetchWeather()\n\n  }, [query,units])\n\n  const formatBackground = () => {\n    if(!weather) return 'from-cyan-700 to-blue-700'\n    const threshold = units === 'metric' ? 20 : 60\n    if (weather.temp <= threshold) return 'from-cyan-700 to blue-700'\n\n    return 'from-yellow-700 to-orange-700'\n  }\n  return (\n    <div className={`mx-auto max-w-screen-md mt-4 py-5 px32 bg-gradient-to-br from-cyan-700 to-blue-700 h-fit shadow-xl\n    shadow-gray-400 ${formatBackground()}`}>\n      <TopButtons setQuery={setQuery}/>\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n\n        <div>\n          <TimeAndLocation weather={weather}/> \n          <TemperatureAndDetails weather={weather} />\n    \n          <Forecast title='hourly forecast' items={weather.hourly} />\n          <Forecast title='daily forecast'items={weather.daily}/> \n\n        </div>\n\n      )}\n\n    <ToastContainer autoClose={5000} theme='colored' newestOnTop={true} />\n      \n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}